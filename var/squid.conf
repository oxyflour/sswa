#
# Recommended minimum configuration:
#

access_log <%= accessLogFile %>
cache_log <%= cacheLogFile %>
pid_filename <%= pidFile %>
dns_v4_first on

# Example rule allowing access from your local networks.
# Adapt to list your (internal) IP networks from where browsing
# should be allowed
acl localnet src 10.0.0.0/8	# RFC1918 possible internal network
acl localnet src 172.16.0.0/12	# RFC1918 possible internal network
acl localnet src 192.168.0.0/16	# RFC1918 possible internal network
acl localnet src fc00::/7       # RFC 4193 local private network range
acl localnet src fe80::/10      # RFC 4291 link-local (directly plugged) machines

acl SSL_ports port 443
acl Safe_ports port 80		# http
acl Safe_ports port 21		# ftp
acl Safe_ports port 443		# https
acl Safe_ports port 70		# gopher
acl Safe_ports port 210		# wais
acl Safe_ports port 1025-65535	# unregistered ports
acl Safe_ports port 280		# http-mgmt
acl Safe_ports port 488		# gss-http
acl Safe_ports port 591		# filemaker
acl Safe_ports port 777		# multiling http
acl CONNECT method CONNECT

#
# Recommended minimum Access Permission configuration:
#
# Deny requests to certain unsafe ports
http_access deny !Safe_ports

# Deny CONNECT to other than secure SSL ports
http_access deny CONNECT !SSL_ports

# Only allow cachemgr access from localhost
http_access allow localhost manager
http_access deny manager

# We strongly recommend the following be uncommented to protect innocent
# web applications running on the proxy server who think the only
# one who can access services on "localhost" is a local user
#http_access deny to_localhost

#
# INSERT YOUR OWN RULE(S) HERE TO ALLOW ACCESS FROM YOUR CLIENTS
#

# http://www.squid-cache.org/Doc/config/cache_peer/
<% peers.forEach(function(peer, index) {
    var st = peer.url.split(':'), host = st[0], port = st[1], name = peer.name %>
cache_peer <%= host %> parent <%= port %> 0 proxy-only no-query no-digest name=<%= name %>
<% }) %>

<% acls.forEach(function(acl, index) {
    if (acl.type === 'domain') {
        var st = acl.rule.split(' '), peer = acl.peer,
            domains = st.join(' '), aclname = 'domain_acl' + index %>
acl <%= aclname %> dstdomain <%= domains %>
cache_peer_access <%= peer %> allow <%= aclname %>
never_direct allow <%= aclname %>
<%} else {%>
<%= acl.rule %>
<% } %>
<% }) %>

<% peers.forEach(function(peer, index) {
    var st = peer.url.split(':'), host = st[0], port = st[1], name = peer.name %>
cache_peer_access <%= name %> deny all
<% }) %>

# Example rule allowing access from your local networks.
# Adapt localnet in the ACL section to list your (internal) IP networks
# from where browsing should be allowed
http_access allow localnet
http_access allow localhost

# And finally deny all other access to this proxy
http_access deny all

# Squid normally listens to port 3128
http_port <%= port %>

# Uncomment and adjust the following to add a disk cache directory.
#cache_dir ufs /var/cache/squid 100 16 256

# Leave coredumps in the first cache dir
coredump_dir /var/cache/squid

#
# Add any of your own refresh_pattern entries above these.
#
refresh_pattern ^ftp:		1440	20%	10080
refresh_pattern ^gopher:	1440	0%	1440
refresh_pattern -i (/cgi-bin/|\?) 0	0%	0
refresh_pattern .		0	20%	4320
